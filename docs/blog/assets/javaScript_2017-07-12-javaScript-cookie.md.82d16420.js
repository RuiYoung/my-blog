import{_ as a,o as s,c as e,Q as n}from"./chunks/framework.544e8ca7.js";const k=JSON.parse('{"title":"cookie","description":"","frontmatter":{"title":"cookie","date":"2017-07-05T00:00:00.000Z","author":"Ruiyoung","tag":["javaScript"]},"headers":[],"relativePath":"javaScript/2017-07-12-javaScript-cookie.md","lastUpdated":null}'),o={name:"javaScript/2017-07-12-javaScript-cookie.md"},l=n(`<h3 id="前言" tabindex="-1">前言 <a class="header-anchor" href="#前言" aria-label="Permalink to &quot;前言&quot;">​</a></h3><blockquote><p>cookie 是存储于访问者的计算机中的变量。每当同一台计算机通过浏览器请求某个页面时，就会发送这个 cookie。当用户下一次访问同一个页面时，服务器会先查看有没有上传留下的 cookie 资料，如果有就更根据 cookie 里的资料判断访问者，发送特定的页面内容.<br> 常见应用场景：自动登录，记住用户名......</p></blockquote><h3 id="创建-cookie" tabindex="-1">创建 cookie <a class="header-anchor" href="#创建-cookie" aria-label="Permalink to &quot;创建 cookie&quot;">​</a></h3><ul><li>格式：将 document 下的 cookie 属性设置为为如下格式的字符串：name=value</li><li>为了避免特殊字符造成的错误，有时需要对数据进行编码解码<br>   使用 encodeURIComponent() 进行编码<br>   读取时 使用 decodeURIComponent()解码<br>   cookie 值不能含有分号，逗号和空白符</li></ul><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">document.cookie=&#39;name=张三&#39;;</span></span>
<span class="line"><span style="color:#A6ACCD;">document.cookie=&#39;age=35&#39;</span></span>
<span class="line"><span style="color:#A6ACCD;">//不会像变量赋值那样覆盖前一条信息，而是会添加一条新内容</span></span>
<span class="line"><span style="color:#A6ACCD;">alert(document.cookie)</span></span></code></pre></div><h3 id="cookie-可选参数" tabindex="-1">cookie 可选参数 <a class="header-anchor" href="#cookie-可选参数" aria-label="Permalink to &quot;cookie 可选参数&quot;">​</a></h3><ul><li>expires=时间：过期时间   默认值为浏览器关闭后过期(即会话结束后)   将 expires 设置为过去的时间可以删除 cookie</li></ul><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">var day=new Date();</span></span>
<span class="line"><span style="color:#A6ACCD;">day.setDate(day.getDate()-1)</span></span>
<span class="line"><span style="color:#A6ACCD;">document.cookie=&#39;name=张三;expires=&#39;+day;</span></span></code></pre></div><ul><li>path:他指定了与 cookie 关联在一起的网页。默认值是在和当前网页同一目录的网页中有效。如果把 path 设置为&#39;/&#39;,那么它对该网站的所有网页可见</li><li>domain:设定 cookie 的有效域名，一般使用默认值，即绑定当前域名，本地测试无效</li><li>secure：指定了网络上如何传输 cookie.默认为普通 http 协议传输；若设置为安全的，将只能通过 https 安全协议才可以传输。</li></ul><h3 id="封装-cookie-创建-读取-删除的函数" tabindex="-1">封装 cookie 创建/读取/删除的函数 <a class="header-anchor" href="#封装-cookie-创建-读取-删除的函数" aria-label="Permalink to &quot;封装 cookie 创建/读取/删除的函数&quot;">​</a></h3><ul><li>创建 cookie 数据的函数封装</li></ul><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">function setCookie(key,value,expires){</span></span>
<span class="line"><span style="color:#A6ACCD;">    document.cookie=encodeURIComponent(key)+&#39;=&#39;+encodeURIComponent(value)+&#39;;expires=&#39;+ddate(expires);</span></span>
<span class="line"><span style="color:#A6ACCD;">}</span></span>
<span class="line"><span style="color:#A6ACCD;">function ddate(expires){</span></span>
<span class="line"><span style="color:#A6ACCD;">    var ddate=new Date()</span></span>
<span class="line"><span style="color:#A6ACCD;">    ddate.setDate(ddate.getDate()+expires)</span></span>
<span class="line"><span style="color:#A6ACCD;">    return ddate</span></span>
<span class="line"><span style="color:#A6ACCD;">}</span></span>
<span class="line"><span style="color:#A6ACCD;">setCookie(&#39;name&#39;,&#39;吉延鹏&#39;)</span></span>
<span class="line"><span style="color:#A6ACCD;">setCookie(&#39;qq&#39;,&#39;365966179&#39;)</span></span>
<span class="line"><span style="color:#A6ACCD;">setCookie(&#39;email&#39;,&#39;365966179@qq.com&#39;)</span></span></code></pre></div><ul><li>读取 cookie 数据的函数封装(split() 方法用于把一个字符串分割成字符串数组。)</li></ul><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">function getCookie(name){</span></span>
<span class="line"><span style="color:#A6ACCD;">    var arrStr=document.cookie.split(&#39;;&#39;);</span></span>
<span class="line"><span style="color:#A6ACCD;">    //alert(arrStr)</span></span>
<span class="line"><span style="color:#A6ACCD;">    for(var i=0;i&lt;arrStr.length;i++){</span></span>
<span class="line"><span style="color:#A6ACCD;">        var arr=arrStr[i].split(&#39;=&#39;)</span></span>
<span class="line"><span style="color:#A6ACCD;">        //alert(arr[0]+&#39;\\n&#39;+arr[1])</span></span>
<span class="line"><span style="color:#A6ACCD;">        if(arr[0]==name){return arr[1] }</span></span>
<span class="line"><span style="color:#A6ACCD;">    }</span></span>
<span class="line"><span style="color:#A6ACCD;">    return &#39;&#39;</span></span>
<span class="line"><span style="color:#A6ACCD;">}</span></span></code></pre></div><ul><li>删除 cookie 的函数封装</li></ul><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">function removeCookie(name){</span></span>
<span class="line"><span style="color:#A6ACCD;">    setCookie(name,&#39;随意值&#39;,-1)</span></span>
<span class="line"><span style="color:#A6ACCD;">}</span></span>
<span class="line"><span style="color:#A6ACCD;">removeCookie(&#39;name&#39;)</span></span></code></pre></div><h3 id="cookie-的限制" tabindex="-1">cookie 的限制 <a class="header-anchor" href="#cookie-的限制" aria-label="Permalink to &quot;cookie 的限制&quot;">​</a></h3><ul><li>数量(20-50,不同浏览器有差异)，大小有限(4k)</li><li>有些数据不适合使用 cookie 保存，比如银行卡号等重要的信息</li></ul>`,18),p=[l];function t(i,c,r,C,d,u){return s(),e("div",null,p)}const h=a(o,[["render",t]]);export{k as __pageData,h as default};
