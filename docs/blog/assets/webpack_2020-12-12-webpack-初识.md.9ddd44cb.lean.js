import{_ as t,o as c,c as o,A as e,a}from"./chunks/framework.544e8ca7.js";const x=JSON.parse('{"title":"初识webpack","description":"","frontmatter":{"title":"初识webpack","date":"2020-12-12T00:00:00.000Z","author":"Ruiyoung","tag":["webpack"]},"headers":[],"relativePath":"webpack/2020-12-12-webpack-初识.md","lastUpdated":null}'),s={name:"webpack/2020-12-12-webpack-初识.md"},n=e("h3",{id:"前言",tabindex:"-1"},[a("前言 "),e("a",{class:"header-anchor",href:"#前言","aria-label":'Permalink to "前言"'},"​")],-1),p=e("blockquote",null,[e("p",null,"Webpack 应该是现代化前端开发的基石，也是目前前端生产力的代名词。")],-1),r=e("h4",{id:"webpack-与模块化开发",tabindex:"-1"},[a("Webpack 与模块化开发 "),e("a",{class:"header-anchor",href:"#webpack-与模块化开发","aria-label":'Permalink to "Webpack 与模块化开发"'},"​")],-1),l=e("p",null,"模块化，可以说是当下最重要的前端开发范式之一。随着前端应用的日益复杂化，我们的项目已经逐渐膨胀到了不得不花大量时间去管理的程度。而模块化就是一种最主流的项目组织方式，它通过把复杂的代码按照功能划分为不同的模块单独维护，从而提高开发效率、降低维护成本。",-1),d=e("p",null,"Webpack 本质上仍然还是一个模块化打包工具，它通过“万物皆模块”这种设计思想，巧妙地实现了整个前端项目的模块化。在 Webpack 的理念中，前端项目中的任何资源都可以作为一个模块，任何模块都可以经过 Loader 机制的处理，最终再被打包到一起。",-1),_=e("p",null,"Webpack 本身的架构中有两个很核心的特性，分别是 Loader 机制和插件机制。正是因为它的插件机制形成了非常繁荣的生态，所以造就了它现在“无所不能”的现状，所以让 Webpack 慢慢发展成了现在很多前端开发者眼中的构建系统。",-1),i=[n,p,r,l,d,_];function b(k,h,u,m,f,w){return c(),o("div",null,i)}const $=t(s,[["render",b]]);export{x as __pageData,$ as default};
